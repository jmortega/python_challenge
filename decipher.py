def decipher(cipher_string, cipher_key):
    '''
    Return the deciphered string represented by cipher_string.
    cipher_string represents a string enciphered using a simple substitution cipher
    The cipher_string is generated by substituting each letter in the original string (before enciphering)
    with the corresponding letter in cipher_key. For example, any letter a in the original string is
    substituted with the first letter in cipher_key, any letter b in the original string is substituted
    with the second letter in cipher_key, and so on.
    Arguments
    cipher_string: a string containing only lower-case letters enciphered using cipher_key.
    cipher_key: a 26-letter substitution cipher key used to encipher cipher_string. Each lower-case letter, 
                a through z, appears once and only once in cipher_key.
    Examples 
    decipher('jgphestdmcyrizxqfowlaukbnv', 'jgphestdmcyrizxqfowlaukbnv') returns 'abcdefghijklmnopqrstuvwxyz'
    decipher('prxahjpjhein', 'jgphestdmcyrizxqfowlaukbnv') returns 'cloudacademy'
    '''

    # ====================================
    # Do not change the code before this

    # CODE1: Write code that will decipher cipher_string using the provided cipher_key
    alphabet = 'abcdefghijklmnopqrstuvwxyz'
    keyIndices = [cipher_key.index(k) for k in cipher_string]
    return ''.join(alphabet[keyIndex] for keyIndex in keyIndices)



if __name__ == '__main__':
    print(decipher('jgphestdmcyrizxqfowlaukbnv', 'jgphestdmcyrizxqfowlaukbnv'))
    print(decipher('prxahjpjhein', 'jgphestdmcyrizxqfowlaukbnv'))
